B. Runner and Customer Experience
1. How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)

SELECT 
	DATEPART(WEEK, registration_date),
	COUNT(runner_id)
FROM runners
GROUP BY DATEPART(WEEK, registration_date);

2. What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?
WITH time_taken_cte AS
(
  SELECT 
    c.order_id, 
    c.order_time, 
    r.pickup_time, 
    DATEDIFF(MINUTE, c.order_time, r.pickup_time) AS pickup_minutes
  FROM customer_orders AS c
  JOIN runner_orders AS r
    ON c.order_id = r.order_id
  WHERE r.distance != 0
  GROUP BY c.order_id, c.order_time, r.pickup_time
)

SELECT 
  AVG(pickup_minutes) AS avg_pickup_minutes
FROM time_taken_cte
WHERE pickup_minutes > 0;

3. Is there any relationship between the number of pizzas and how long the order takes to prepare?
WITH time_prepare_order AS (
SELECT 
	co.order_id, 
	COUNT(pizza_id) as num_pizza, 
	DATEDIFF(MINUTE,co.order_date, ro.pickup_time) as time_prepare
FROM customer_orders co
JOIN runner_orders ro 
	ON co.order_id = ro.order_id
WHERE ro.distance != 0
GROUP BY 
		co.order_id, 
		DATEDIFF(MINUTE,co.order_date, ro.pickup_time) )

SELECT 
	num_pizza, 
	AVG(time_prepare) as avg_time_prepare
FROM time_prepare_order
GROUP BY num_pizza

4. Assuming that distance is calculated from Pizza Runner HQ to customerâ€™s place
SELECT customer_id, AVG( ro.distance) as avg_time_prepare 
FROM customer_orders co
JOIN runner_orders ro
	ON co.order_id = ro.order_id
WHERE distance > 0
GROUP BY customer_id

5.What was the difference between the longest and shortest delivery times for all orders?
SELECT 
	MAX(ro.duration) AS longest_time_delivery, 
	MIN(ro.duration) AS min_time_delivery, 
	MAX(ro.duration) - MIN(ro.duration) as time_difference
FROM runner_orders ro


6.What was the average speed for each runner for each delivery and do you notice any trend for these values?
SELECT 
	runner_id, order_id , 
	ROUND(AVG(distance/(duration/60)), 1) AS average_speed
FROM runner_orders
WHERE distance > 0
GROUP BY order_id, runner_id
ORDER BY runner_id;

7. What is the successful delivery percentage for each runner?
SELECT 
	runner_id, 
	(COUNT(distance)*100/COUNT(order_id)) as success_delivery_percent
FROM runner_orders
GROUP BY runner_id

C

